[
    {
        "id": 1802943,
        "question": "What is a thread?",
        "correctAnswers": ["A unit of execution"],
        "incorrectAnswers": ["A data container", "A memory block", "A type of variable"],
        "explanation": "A thread is the smallest unit of execution within a process.",
        "difficulty": 5,
        "tags": ["programming", "concurrency"]
    },
    {
        "id": 7129385,
        "question": "What is the main benefit of using concurrency?",
        "correctAnswers": ["Improved performance"],
        "incorrectAnswers": ["Increased memory usage", "Simpler code", "Fewer bugs"],
        "explanation": "Concurrency can improve performance by allowing multiple tasks to run simultaneously.",
        "difficulty": 8,
        "tags": ["programming", "concurrency"]
    },
    {
        "id": 1049582,
        "question": "Which keyword starts a new thread in Java?",
        "correctAnswers": ["start()"],
        "incorrectAnswers": ["run()", "init()", "execute()"],
        "explanation": "The start() method is used to begin the execution of a thread in Java.",
        "difficulty": 10,
        "tags": ["programming", "concurrency"]
    },
    {
        "id": 3084267,
        "question": "What is a race condition?",
        "correctAnswers": ["Unpredictable shared access"],
        "incorrectAnswers": ["A compiler error", "A network conflict", "A deadlock scenario"],
        "explanation": "A race condition occurs when multiple threads access shared data in an unpredictable order.",
        "difficulty": 15,
        "tags": ["programming", "concurrency"]
    },
    {
        "id": 8391274,
        "question": "Which mechanism is used to prevent race conditions?",
        "correctAnswers": ["Locks"],
        "incorrectAnswers": ["Caches", "Queues", "Timers"],
        "explanation": "Locks are used to control access to shared resources in concurrent environments.",
        "difficulty": 18,
        "tags": ["programming", "concurrency"]
    },
    {
        "id": 5923018,
        "question": "Which of these is a thread-safe data structure?",
        "correctAnswers": ["ConcurrentHashMap"],
        "incorrectAnswers": ["HashMap", "ArrayList", "LinkedList"],
        "explanation": "ConcurrentHashMap is designed to support concurrent access by multiple threads.",
        "difficulty": 20,
        "tags": ["programming", "concurrency"]
    },
    {
        "id": 2749183,
        "question": "What does 'deadlock' mean in concurrency?",
        "correctAnswers": ["Threads wait forever"],
        "incorrectAnswers": ["All threads finish", "Data gets deleted", "Only one thread runs"],
        "explanation": "A deadlock occurs when threads are waiting on each other indefinitely.",
        "difficulty": 25,
        "tags": ["programming", "concurrency"]
    },
    {
        "id": 6904371,
        "question": "Which keyword ensures atomic operations in Java?",
        "correctAnswers": ["synchronized"],
        "incorrectAnswers": ["static", "final", "abstract"],
        "explanation": "The synchronized keyword prevents multiple threads from accessing a method or block at the same time.",
        "difficulty": 30,
        "tags": ["programming", "concurrency"]
    },
    {
        "id": 8450172,
        "question": "What is a thread pool?",
        "correctAnswers": ["Group of reusable threads"],
        "incorrectAnswers": ["List of threads", "Backup process group", "Memory monitor"],
        "explanation": "A thread pool reuses a fixed number of threads to execute tasks.",
        "difficulty": 35,
        "tags": ["programming", "concurrency"]
    },
    {
        "id": 1037591,
        "question": "What is the purpose of a semaphore?",
        "correctAnswers": ["Control access count"],
        "incorrectAnswers": ["End threads", "Allocate memory", "Reset processors"],
        "explanation": "Semaphores manage the number of threads that can access a resource at once.",
        "difficulty": 40,
        "tags": ["programming", "concurrency"]
    },
    {
        "id": 5392017,
        "question": "Which of these avoids thread starvation?",
        "correctAnswers": ["Fair lock"],
        "incorrectAnswers": ["Spin lock", "Deadlock", "Busy wait"],
        "explanation": "Fair locks ensure that threads are granted access in order of request.",
        "difficulty": 45,
        "tags": ["programming", "concurrency"]
    },
    {
        "id": 8643902,
        "question": "Which Java class helps schedule concurrent tasks?",
        "correctAnswers": ["ScheduledExecutorService"],
        "incorrectAnswers": ["Thread", "Runnable", "CallableManager"],
        "explanation": "ScheduledExecutorService allows scheduled or periodic task execution.",
        "difficulty": 50,
        "tags": ["programming", "concurrency"]
    },
    {
        "id": 9182074,
        "question": "What is the key trait of a volatile variable in Java?",
        "correctAnswers": ["Visibility between threads"],
        "incorrectAnswers": ["Immutable state", "Private access", "Faster execution"],
        "explanation": "Volatile ensures changes are visible across threads without caching issues.",
        "difficulty": 55,
        "tags": ["programming", "concurrency"]
    },
    {
        "id": 4891730,
        "question": "What problem do atomic variables solve?",
        "correctAnswers": ["Atomic updates"],
        "incorrectAnswers": ["Memory leaks", "Thread starvation", "Stack overflow"],
        "explanation": "Atomic variables provide thread-safe, lock-free updates of single variables.",
        "difficulty": 60,
        "tags": ["programming", "concurrency"]
    },
    {
        "id": 3029471,
        "question": "What does the Fork/Join framework support?",
        "correctAnswers": ["Task splitting"],
        "incorrectAnswers": ["Thread blocking", "Bytecode parsing", "Event propagation"],
        "explanation": "The Fork/Join framework enables dividing tasks into smaller subtasks recursively.",
        "difficulty": 65,
        "tags": ["programming", "concurrency"]
    },
    {
        "id": 6179204,
        "question": "Which model is used in Go for concurrency?",
        "correctAnswers": ["CSP"],
        "incorrectAnswers": ["MapReduce", "Actor model", "Reactive streams"],
        "explanation": "Go uses the Communicating Sequential Processes (CSP) model with goroutines and channels.",
        "difficulty": 70,
        "tags": ["programming", "concurrency"]
    },
    {
        "id": 7401826,
        "question": "What is a latch in concurrency?",
        "correctAnswers": ["Blocking gate"],
        "incorrectAnswers": ["Loop detector", "Resource cleaner", "Message queue"],
        "explanation": "A latch blocks threads until a condition or count is met.",
        "difficulty": 75,
        "tags": ["programming", "concurrency"]
    },
    {
        "id": 8310956,
        "question": "What is a non-blocking algorithm?",
        "correctAnswers": ["No waiting"],
        "incorrectAnswers": ["Always locks", "Uses semaphores", "Delays all threads"],
        "explanation": "Non-blocking algorithms allow progress without waiting on locks.",
        "difficulty": 80,
        "tags": ["programming", "concurrency"]
    }
]
